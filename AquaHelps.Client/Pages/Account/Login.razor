@page "/Account/Login"
@using AquaHelps.Client.Auth;
@inject AHAuthenticationStateProvider AuthProvider
@inject NavigationManager NavManager

<div class="flex flex-col gap-2">

    <div class="bg-white p-2 rounded-xl flex flex-col gap-2">
        <div class="font-semibold text-center text-2xl">
            Login
        </div>
    </div>
    <div class="bg-gradient-to-br from-white to-gray-200 p-2 rounded-xl flex flex-col gap-2">

        <input class="bg-white flex-grow rounded-lg shadow-blue-50 drop-shadow-2xl focus:border-2 focus:border-blue-600 py-2 px-4 block flex-grow"
        @bind="_email"
               placeholder="Email" type="email" autocomplete="on">
        <input class="bg-white flex-grow rounded-lg shadow-blue-50 drop-shadow-2xl focus:border-2 focus:border-blue-600 py-2 px-4 block flex-grow"
        @bind="_password"
               placeholder="Password" type="password" autocomplete="on">
            <Button ButtonText="Login" OnClick="LoginHandler"></Button>
        <div class="bg-blue-300 flex flex-grow">
            <input class="bg-transparent flex-grow rounded-lg shadow-blue-500 drop-shadow-2xl focus:border-2 focus:border-blue-600 py-2 px-4 block flex-grow" placeholder="Email">
        </div>
    </div>
</div>

@code {
    private string _email = "";
    private string _password = "";
     
    [Parameter] public string ReturnUrl { get; set; } = "/";

    protected override async Task OnInitializedAsync()
    {
        if (await AuthProvider.IsSignedIn())
        {
            NavManager.NavigateTo(ReturnUrl);
        }
        await base.OnInitializedAsync();
    }
    private async Task LoginHandler(MouseEventArgs e)
    {
        await AuthProvider.Login(_email, _password);
        if (await AuthProvider.IsSignedIn())
        {
            NavManager.NavigateTo(ReturnUrl);
        }
    }

}
